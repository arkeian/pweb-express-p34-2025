generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  username   String
  password   String
  email      String   @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relasi
  orders     Order[]
}

model Genre {
  id         String   @id @default(uuid())
  name       String   @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  deletedAt  DateTime?

  // Relasi
  books      Book[]
}

model Book {
  id              String    @id @default(uuid())
  title           String    @unique
  writer          String
  publisher       String
  publicationYear Int
  description     String?
  price           Float
  stockQuantity   Int
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  deletedAt       DateTime?

  // Foreign key
  genreId         String
  genre           Genre     @relation(fields: [genreId], references: [id])

  // Relasi ke order items
  orderItems      OrderItem[]
}

model Order {
  id         String    @id @default(uuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  // Foreign key
  userId     String
  user       User      @relation(fields: [userId], references: [id])

  // Relasi ke order_items
  items      OrderItem[]
}

model OrderItem {
  id         String    @id @default(uuid())
  quantity   Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  // Foreign keys
  orderId    String
  order      Order     @relation(fields: [orderId], references: [id])

  bookId     String
  book       Book      @relation(fields: [bookId], references: [id])
}

model Transaction {
  id           Int               @id @default(autoincrement())
  user         User              @relation(fields: [userId], references: [id])
  userId       Int
  totalAmount  Float
  createdAt    DateTime          @default(now())
  items        TransactionItem[]
}

model TransactionItem {
  id             Int          @id @default(autoincrement())
  transaction    Transaction  @relation(fields: [transactionId], references: [id])
  transactionId  Int
  book           Book         @relation(fields: [bookId], references: [id])
  bookId         Int
  quantity       Int
  price          Float
}

model User {
  ...
  transactions Transaction[]
}

model Book {
  ...
  transactionItems TransactionItem[]
}
